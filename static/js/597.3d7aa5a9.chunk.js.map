{"version":3,"file":"static/js/597.3d7aa5a9.chunk.js","mappings":"uNAKMA,EAAaC,EAAAA,GAAAA,GAAH,iGA2ChB,UArCa,WACX,OAAwBC,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAMR,OAJAE,EAAAA,EAAAA,YAAU,WACRC,EAAAA,EAAAA,mBAAuBH,EAASD,EACjC,GAAE,CAACC,KAGF,+BACE,SAACL,EAAD,UACGG,EAAKM,OAAS,GACb,4DAEAN,EAAKO,KAAI,gBAAGC,EAAH,EAAGA,UAAWC,EAAd,EAAcA,GAAIC,EAAlB,EAAkBA,KAAMC,EAAxB,EAAwBA,aAAxB,OACP,0BACoB,OAAjBA,GACC,gBACEC,IAAK,mCACLC,IAAG,sBAGL,gBACED,IAAG,yCAAoCD,GACvCE,IAAG,UAAKH,MAGZ,kCAAUA,MACV,uCAAeF,OAbRC,EADF,OAqBlB,C,2EC5CKK,EAAU,mCACVC,EAAW,gCAEXC,EAAa,mCAAG,WAAMC,GAAN,gGAEKC,IAAAA,IAAA,UAClBH,EADkB,sCACoBD,IAHzB,cAEZK,EAFY,yBAMXF,EAAkBE,EAASC,KAAKC,UANrB,gCAQlBC,QAAQC,MAAR,MARkB,yDAAH,sDAYbC,EAAc,mCAAG,WAAOtB,EAASuB,GAAhB,gGAEIP,IAAAA,IAAA,UAClBH,EADkB,iBACDb,EADC,oBACkBY,EADlB,oBAFJ,cAEbK,EAFa,yBAMZM,EAASN,EAASC,OANN,gCAQnBE,QAAQC,MAAR,MARmB,yDAAH,wDAYdG,EAAkB,mCAAG,WAAOxB,EAASD,GAAhB,gGAEAiB,IAAAA,IAAA,UAClBH,EADkB,iBACDb,EADC,4BAC0BY,EAD1B,oBAFA,cAEjBK,EAFiB,yBAMhBlB,EAAQkB,EAASC,KAAKpB,OANN,gCAQvBsB,QAAQC,MAAR,MARuB,yDAAH,wDAYlBI,EAAqB,mCAAG,WAAOzB,EAAS0B,GAAhB,gGAEHV,IAAAA,IAAA,UAClBH,EADkB,iBACDb,EADC,4BAC0BY,EAD1B,oBAFG,cAEpBK,EAFoB,yBAMnBS,EAAWT,EAASC,KAAKC,UANN,gCAQ1BC,QAAQC,MAAR,MAR0B,yDAAH,wDAYrBM,EAAiB,mCAAG,WAAOC,EAAOC,GAAd,gGAECb,IAAAA,IAAA,UAClBH,EADkB,gCACcD,EADd,kBAC+BgB,EAD/B,gCAFD,cAEhBX,EAFgB,yBAKfY,EAAiBZ,EAASC,KAAKC,UALhB,gCAOtBC,QAAQC,MAAR,MAPsB,yDAAH,wDAWjBlB,EAAM,CACVW,cAAAA,EACAQ,eAAAA,EACAE,mBAAAA,EACAC,sBAAAA,EACAE,kBAAAA,GAGF,K","sources":["components/Cast.jsx","services/movieApi.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport api from 'services/movieApi';\nimport styled from 'styled-components';\n\nconst StyledList = styled.ul`\n  list-style: none;\n  display: flex;\n  justify-content: space-evenly;\n`;\n\nconst Cast = () => {\n  const [cast, setCast] = useState([]);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    api.fetchMovieCastById(movieId, setCast);\n  }, [movieId]);\n\n  return (\n    <>\n      <StyledList>\n        {cast.length < 1 ? (\n          <p>Sorry, the cast is not available</p>\n        ) : (\n          cast.map(({ character, id, name, profile_path }) => (\n            <li key={id}>\n              {profile_path === null ? (\n                <img\n                  src={'https://placehold.jp/200x300.png'}\n                  alt={`just placeholder`}\n                />\n              ) : (\n                <img\n                  src={`https://image.tmdb.org/t/p/w200${profile_path}`}\n                  alt={`${name}`}\n                />\n              )}\n              <p>Name: {name}</p>\n              <p>Character: {character}</p>\n            </li>\n          ))\n        )}\n      </StyledList>\n    </>\n  );\n};\n\nexport default Cast;\n","import axios from 'axios';\n\nconst API_KEY = 'deb4d54946abdc202a0e5e0e78d6bfcf';\nconst BASE_URL = 'https://api.themoviedb.org/3/';\n\nconst fetchTrending = async setTrendingMovies => {\n  try {\n    const response = await axios.get(\n      `${BASE_URL}trending/movie/day?api_key=${API_KEY}`\n    );\n\n    return setTrendingMovies(response.data.results);\n  } catch (error) {\n    console.error(error);\n  }\n};\n\nconst fetchMovieById = async (movieId, setMovie) => {\n  try {\n    const response = await axios.get(\n      `${BASE_URL}movie/${movieId}?api_key=${API_KEY}&language=en-US`\n    );\n\n    return setMovie(response.data);\n  } catch (error) {\n    console.error(error);\n  }\n};\n\nconst fetchMovieCastById = async (movieId, setCast) => {\n  try {\n    const response = await axios.get(\n      `${BASE_URL}movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`\n    );\n\n    return setCast(response.data.cast);\n  } catch (error) {\n    console.error(error);\n  }\n};\n\nconst fetchMovieReviewsById = async (movieId, setReviews) => {\n  try {\n    const response = await axios.get(\n      `${BASE_URL}movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US`\n    );\n\n    return setReviews(response.data.results);\n  } catch (error) {\n    console.error(error);\n  }\n};\n\nconst fetchMovieByQuery = async (query, setSearchedMovie) => {\n  try {\n    const response = await axios.get(\n      `${BASE_URL}search/movie?api_key=${API_KEY}&query=${query}&page=1&include_adult=false`\n    );\n    return setSearchedMovie(response.data.results);\n  } catch (error) {\n    console.error(error);\n  }\n};\n\nconst api = {\n  fetchTrending,\n  fetchMovieById,\n  fetchMovieCastById,\n  fetchMovieReviewsById,\n  fetchMovieByQuery,\n};\n\nexport default api;\n"],"names":["StyledList","styled","useState","cast","setCast","movieId","useParams","useEffect","api","length","map","character","id","name","profile_path","src","alt","API_KEY","BASE_URL","fetchTrending","setTrendingMovies","axios","response","data","results","console","error","fetchMovieById","setMovie","fetchMovieCastById","fetchMovieReviewsById","setReviews","fetchMovieByQuery","query","setSearchedMovie"],"sourceRoot":""}