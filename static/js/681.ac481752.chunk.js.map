{"version":3,"file":"static/js/681.ac481752.chunk.js","mappings":"yNAKMA,EAAaC,EAAAA,GAAAA,GAAH,yCAIVC,EAAaD,EAAAA,GAAAA,GAAH,iMAoChB,UA3BgB,WACd,OAA8BE,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KAEQC,GAAYC,EAAAA,EAAAA,MAAZD,QAMR,OAJAE,EAAAA,EAAAA,YAAU,WACRC,EAAAA,EAAAA,sBAA0BH,EAASD,EACpC,GAAE,CAACC,KAGF,8BACGF,EAAQM,OAAS,GAChB,uEAEA,SAACV,EAAD,UACGI,EAAQO,KAAI,gBAAGC,EAAH,EAAGA,OAAQC,EAAX,EAAWA,QAASC,EAApB,EAAoBA,GAApB,OACX,UAACZ,EAAD,YACE,uBAAIW,KACJ,4CAAoBD,OAFLE,EADN,OAUtB,C,2ECzCKC,EAAU,mCACVC,EAAW,gCAEXC,EAAa,mCAAG,WAAMC,GAAN,gGAEKC,IAAAA,IAAA,UAClBH,EADkB,sCACoBD,IAHzB,cAEZK,EAFY,yBAMXF,EAAkBE,EAASC,KAAKC,UANrB,gCAQlBC,QAAQC,MAAR,MARkB,yDAAH,sDAYbC,EAAc,mCAAG,WAAOnB,EAASoB,GAAhB,gGAEIP,IAAAA,IAAA,UAClBH,EADkB,iBACDV,EADC,oBACkBS,EADlB,oBAFJ,cAEbK,EAFa,yBAMZM,EAASN,EAASC,OANN,gCAQnBE,QAAQC,MAAR,MARmB,yDAAH,wDAYdG,EAAkB,mCAAG,WAAOrB,EAASsB,GAAhB,gGAEAT,IAAAA,IAAA,UAClBH,EADkB,iBACDV,EADC,4BAC0BS,EAD1B,oBAFA,cAEjBK,EAFiB,yBAMhBQ,EAAQR,EAASC,KAAKQ,OANN,gCAQvBN,QAAQC,MAAR,MARuB,yDAAH,wDAYlBM,EAAqB,mCAAG,WAAOxB,EAASD,GAAhB,gGAEHc,IAAAA,IAAA,UAClBH,EADkB,iBACDV,EADC,4BAC0BS,EAD1B,oBAFG,cAEpBK,EAFoB,yBAMnBf,EAAWe,EAASC,KAAKC,UANN,gCAQ1BC,QAAQC,MAAR,MAR0B,yDAAH,wDAYrBO,EAAiB,mCAAG,WAAOC,EAAOC,GAAd,gGAECd,IAAAA,IAAA,UAClBH,EADkB,gCACcD,EADd,kBAC+BiB,EAD/B,gCAFD,cAEhBZ,EAFgB,yBAKfa,EAAiBb,EAASC,KAAKC,UALhB,gCAOtBC,QAAQC,MAAR,MAPsB,yDAAH,wDAWjBf,EAAM,CACVQ,cAAAA,EACAQ,eAAAA,EACAE,mBAAAA,EACAG,sBAAAA,EACAC,kBAAAA,GAGF,K","sources":["components/Reviews.jsx","services/movieApi.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport api from 'services/movieApi';\nimport styled from 'styled-components';\n\nconst StyledList = styled.ul`\n  padding: 0px;\n`;\n\nconst StyledItem = styled.li`\n  border: 1px solid black;\n  border-radius: 12px;\n  padding: 15px;\n  text-align: justify;\n  margin-bottom: 10px;\n  background-color: #878f99;\n  overflow: hidden;\n`;\nconst Reviews = () => {\n  const [reviews, setReviews] = useState([]);\n\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    api.fetchMovieReviewsById(movieId, setReviews);\n  }, [movieId]);\n\n  return (\n    <>\n      {reviews.length < 1 ? (\n        <p>Sorry, no one has reviewed this title yet!</p>\n      ) : (\n        <StyledList>\n          {reviews.map(({ author, content, id }) => (\n            <StyledItem key={id}>\n              <p>{content}</p>\n              <h4>Review author: {author}</h4>\n            </StyledItem>\n          ))}\n        </StyledList>\n      )}\n    </>\n  );\n};\n\nexport default Reviews;\n","import axios from 'axios';\n\nconst API_KEY = 'deb4d54946abdc202a0e5e0e78d6bfcf';\nconst BASE_URL = 'https://api.themoviedb.org/3/';\n\nconst fetchTrending = async setTrendingMovies => {\n  try {\n    const response = await axios.get(\n      `${BASE_URL}trending/movie/day?api_key=${API_KEY}`\n    );\n\n    return setTrendingMovies(response.data.results);\n  } catch (error) {\n    console.error(error);\n  }\n};\n\nconst fetchMovieById = async (movieId, setMovie) => {\n  try {\n    const response = await axios.get(\n      `${BASE_URL}movie/${movieId}?api_key=${API_KEY}&language=en-US`\n    );\n\n    return setMovie(response.data);\n  } catch (error) {\n    console.error(error);\n  }\n};\n\nconst fetchMovieCastById = async (movieId, setCast) => {\n  try {\n    const response = await axios.get(\n      `${BASE_URL}movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`\n    );\n\n    return setCast(response.data.cast);\n  } catch (error) {\n    console.error(error);\n  }\n};\n\nconst fetchMovieReviewsById = async (movieId, setReviews) => {\n  try {\n    const response = await axios.get(\n      `${BASE_URL}movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US`\n    );\n\n    return setReviews(response.data.results);\n  } catch (error) {\n    console.error(error);\n  }\n};\n\nconst fetchMovieByQuery = async (query, setSearchedMovie) => {\n  try {\n    const response = await axios.get(\n      `${BASE_URL}search/movie?api_key=${API_KEY}&query=${query}&page=1&include_adult=false`\n    );\n    return setSearchedMovie(response.data.results);\n  } catch (error) {\n    console.error(error);\n  }\n};\n\nconst api = {\n  fetchTrending,\n  fetchMovieById,\n  fetchMovieCastById,\n  fetchMovieReviewsById,\n  fetchMovieByQuery,\n};\n\nexport default api;\n"],"names":["StyledList","styled","StyledItem","useState","reviews","setReviews","movieId","useParams","useEffect","api","length","map","author","content","id","API_KEY","BASE_URL","fetchTrending","setTrendingMovies","axios","response","data","results","console","error","fetchMovieById","setMovie","fetchMovieCastById","setCast","cast","fetchMovieReviewsById","fetchMovieByQuery","query","setSearchedMovie"],"sourceRoot":""}