{"version":3,"file":"static/js/314.d05e8559.chunk.js","mappings":"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","sources":["components/MovieDetails.jsx","pages/MovieDetailsPage.jsx","services/movieApi.js"],"sourcesContent":["import React, { Suspense } from 'react';\nimport { Link, Outlet, useLocation } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport Loader from './Loader';\n\nconst Wrapper = styled.div`\n  display: flex;\n`;\n\nconst InfoWrapper = styled.div`\n  margin-left 25px\n  `;\n\nconst MovieDetails = ({ movie }) => {\n    const location = useLocation();\n\n  const { title, overview, vote_average, genres, poster_path } = movie;\n  return (\n    <>\n      <Wrapper>\n        <div>\n          {!poster_path && (\n            <img\n              src={'https://placehold.co/500x750'}\n              alt={`just placeholder`}\n            />\n          )}\n          {poster_path && (\n            <img\n              src={`https://image.tmdb.org/t/p/w500${poster_path}`}\n              alt={`${title} movie poster`}\n            />\n          )}\n        </div>\n        <InfoWrapper>\n          <h1>{title}</h1>\n          <p>User Score: {(vote_average * 10).toFixed(0)}%</p>\n          <h2>Overwiew</h2>\n          <p>{overview}</p>\n          <h2>Genres</h2>\n          <p>{genres?.map(({ name }) => name + ', ')}</p>\n        </InfoWrapper>\n      </Wrapper>\n      <div>\n        <h3>Additional information</h3>\n        <ul>\n          <li>\n            <Link to={`cast`} state={location.state}>\n              Cast\n            </Link>\n          </li>\n          <li>\n            <Link to={`reviews`} state={location.state}>\n              Reviews\n            </Link>\n          </li>\n        </ul>\n        <Suspense fallback={<Loader />}>\n          <Outlet />\n        </Suspense>\n      </div>\n    </>\n  );\n};\n\nMovieDetails.propTypes = {\n  movie: PropTypes.object,\n};\n\nexport default MovieDetails;\n","import React, { useEffect, useState } from 'react';\nimport { useLocation, useNavigate, useParams } from 'react-router-dom';\nimport api from 'services/movieApi';\nimport MovieDetails from '../components/MovieDetails';\nimport { IoIosArrowRoundBack } from 'react-icons/io';\nimport styled from 'styled-components';\n\nconst Button = styled.button`\n  margin-bottom: 25px;\n  align-items: center;\n  background-color: #fff;\n  border-radius: 12px;\n  box-shadow: transparent 0 0 0 3px, rgba(18, 18, 18, 0.1) 0 6px 20px;\n  box-sizing: border-box;\n  color: #121212;\n  cursor: pointer;\n  display: inline-flex;\n  flex: 1 1 auto;\n  font-family: Inter, sans-serif;\n  font-size: 1.2rem;\n  font-weight: 700;\n  justify-content: center;\n  line-height: 1;\n  outline: none;\n  padding: 1rem 1.2rem;\n  text-align: center;\n  text-decoration: none;\n  transition: box-shadow 0.2s, -webkit-box-shadow 0.2s;\n  white-space: nowrap;\n  border: 0;\n  user-select: none;\n  -webkit-user-select: none;\n  touch-action: manipulation;\n\n  &:hover {\n    box-shadow: #121212 0 0 0 3px, transparent 0 0 0 0;\n  }\n`;\n\nconst MoviesDetailsPage = () => {\n  const navigate = useNavigate();\n  const location = useLocation();\n\n\n  const [movie, setMovie] = useState({});\n  const { movieId } = useParams();\n  const backTo =\n    location.state?.from ??\n    '/';\n\n  useEffect(() => {\n    api.fetchMovieById(movieId, setMovie);\n  }, [movieId]);\n\n  return (\n    <>\n      <Button\n        onClick={() => {\n          navigate(backTo , { replace: true });\n        }}\n      >\n        <IoIosArrowRoundBack /> Go back\n      </Button>\n      <MovieDetails movie={movie} />\n    </>\n  );\n};\n\nexport default MoviesDetailsPage;\n","import axios from 'axios';\n\nconst API_KEY = 'deb4d54946abdc202a0e5e0e78d6bfcf';\nconst BASE_URL = 'https://api.themoviedb.org/3/';\n\nconst fetchTrending = async setTrendingMovies => {\n  try {\n    const response = await axios.get(\n      `${BASE_URL}trending/movie/day?api_key=${API_KEY}`\n    );\n\n    return setTrendingMovies(response.data.results);\n  } catch (error) {\n    console.error(error);\n  }\n};\n\nconst fetchMovieById = async (movieId, setMovie) => {\n  try {\n    const response = await axios.get(\n      `${BASE_URL}movie/${movieId}?api_key=${API_KEY}&language=en-US`\n    );\n\n    return setMovie(response.data);\n  } catch (error) {\n    console.error(error);\n  }\n};\n\nconst fetchMovieCastById = async (movieId, setCast) => {\n  try {\n    const response = await axios.get(\n      `${BASE_URL}movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`\n    );\n\n    return setCast(response.data.cast);\n  } catch (error) {\n    console.error(error);\n  }\n};\n\nconst fetchMovieReviewsById = async (movieId, setReviews) => {\n  try {\n    const response = await axios.get(\n      `${BASE_URL}movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US`\n    );\n\n    return setReviews(response.data.results);\n  } catch (error) {\n    console.error(error);\n  }\n};\n\nconst fetchMovieByQuery = async (query, setSearchedMovie) => {\n  try {\n    const response = await axios.get(\n      `${BASE_URL}search/movie?api_key=${API_KEY}&query=${query}&page=1&include_adult=false`\n    );\n    return setSearchedMovie(response.data.results);\n  } catch (error) {\n    console.error(error);\n  }\n};\n\nconst api = {\n  fetchTrending,\n  fetchMovieById,\n  fetchMovieCastById,\n  fetchMovieReviewsById,\n  fetchMovieByQuery,\n};\n\nexport default api;\n"],"names":["Wrapper","styled","InfoWrapper","movie","location","useLocation","title","overview","vote_average","genres","poster_path","src","alt","toFixed","map","name","to","state","Suspense","fallback","Loader","Button","navigate","useNavigate","useState","setMovie","movieId","useParams","backTo","from","useEffect","api","onClick","replace","API_KEY","BASE_URL","fetchTrending","setTrendingMovies","axios","response","data","results","console","error","fetchMovieById","fetchMovieCastById","setCast","cast","fetchMovieReviewsById","setReviews","fetchMovieByQuery","query","setSearchedMovie"],"sourceRoot":""}