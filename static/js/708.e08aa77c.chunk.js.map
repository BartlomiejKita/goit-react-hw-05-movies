{"version":3,"file":"static/js/708.e08aa77c.chunk.js","mappings":"2MAwDA,UApDmB,WACjB,OAA0CA,EAAAA,EAAAA,UAAS,IAAnD,eAAOC,EAAP,KAAsBC,EAAtB,KACA,GAAsCC,EAAAA,EAAAA,MAAtC,eAAOC,EAAP,KAAoBC,EAApB,KACMC,EAAQF,EAAYG,IAAI,UAa9BC,EAAAA,EAAAA,YAAU,WACM,OAAVF,EAIJG,EAAAA,EAAAA,kBAAsBH,EAAOJ,GAH3BA,EAAiB,GAIpB,GAAE,CAACI,IAEJ,IAAII,GAASC,EAAAA,EAAAA,MAEb,OACE,iCACID,EAAOE,UACP,iCACE,kBAAMC,SA1BM,SAAAC,GAClBA,EAAEC,iBACF,IAAMC,EAAOF,EAAEG,cACTC,EAAYF,EAAKG,SAASb,MAAMc,MACpB,KAAdF,IAGJb,EAAe,CAAEC,MAAOY,IACxBT,EAAAA,EAAAA,kBAAsBH,EAAOJ,GAC7Bc,EAAKK,QACN,EAgBO,WACE,kBAAOC,KAAK,OAAOC,KAAK,WACxB,mBAAQD,KAAK,SAAb,+BAEF,wBACGrB,EAAcuB,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,MAAP,OACjB,yBACE,SAAC,KAAD,CAAMC,GAAE,kBAAaF,GAArB,SAA4BC,KADrBD,EADQ,SAQxBf,EAAOE,UACN,+BACE,SAAC,KAAD,QAKT,C,2ECpDKgB,EAAU,mCACVC,EAAW,gCAEXC,EAAa,mCAAG,WAAMC,GAAN,gGAEKC,IAAAA,IAAA,UAClBH,EADkB,sCACoBD,IAHzB,cAEZK,EAFY,yBAMXF,EAAkBE,EAASC,KAAKC,UANrB,gCAQlBC,QAAQC,MAAR,MARkB,yDAAH,sDAYbC,EAAc,mCAAG,WAAO1B,EAAS2B,GAAhB,gGAEIP,IAAAA,IAAA,UAClBH,EADkB,iBACDjB,EADC,oBACkBgB,EADlB,oBAFJ,cAEbK,EAFa,yBAMZM,EAASN,EAASC,OANN,gCAQnBE,QAAQC,MAAR,MARmB,yDAAH,wDAYdG,EAAkB,mCAAG,WAAO5B,EAAS6B,GAAhB,gGAEAT,IAAAA,IAAA,UAClBH,EADkB,iBACDjB,EADC,4BAC0BgB,EAD1B,oBAFA,cAEjBK,EAFiB,yBAMhBQ,EAAQR,EAASC,KAAKQ,OANN,gCAQvBN,QAAQC,MAAR,MARuB,yDAAH,wDAYlBM,EAAqB,mCAAG,WAAO/B,EAASgC,GAAhB,gGAEHZ,IAAAA,IAAA,UAClBH,EADkB,iBACDjB,EADC,4BAC0BgB,EAD1B,oBAFG,cAEpBK,EAFoB,yBAMnBW,EAAWX,EAASC,KAAKC,UANN,gCAQ1BC,QAAQC,MAAR,MAR0B,yDAAH,wDAYrBQ,EAAiB,mCAAG,WAAOvC,EAAOJ,GAAd,gGAEC8B,IAAAA,IAAA,UAClBH,EADkB,gCACcD,EADd,kBAC+BtB,EAD/B,gCAFD,cAEhB2B,EAFgB,yBAKf/B,EAAiB+B,EAASC,KAAKC,UALhB,gCAOtBC,QAAQC,MAAR,MAPsB,yDAAH,wDAWjB5B,EAAM,CACVqB,cAAAA,EACAQ,eAAAA,EACAE,mBAAAA,EACAG,sBAAAA,EACAE,kBAAAA,GAGF,K","sources":["components/MoviesPage.jsx","services/movieApi.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { Outlet, useParams, useSearchParams, Link } from 'react-router-dom';\nimport api from 'services/movieApi';\n\nconst MoviesPage = () => {\n  const [searchedMovie, setSearchedMovie] = useState([]);\n  const [searchQuery, setSearchQuery] = useSearchParams();\n  const query = searchQuery.get('query');\n  const searchMovie = e => {\n    e.preventDefault();\n    const form = e.currentTarget;\n    const formQuery = form.elements.query.value;\n    if (formQuery === '') {\n      return;\n    }\n    setSearchQuery({ query: formQuery });\n    api.fetchMovieByQuery(query, setSearchedMovie);\n    form.reset();\n  };\n\n  useEffect(() => {\n    if (query === null) {\n      setSearchedMovie([]);\n      return;\n    }\n    api.fetchMovieByQuery(query, setSearchedMovie);\n  }, [query]);\n\n  let params = useParams();\n  \n  return (\n    <>\n      {!params.movieId && (\n        <>\n          <form onSubmit={searchMovie}>\n            <input type=\"text\" name=\"query\"></input>\n            <button type=\"submit\">Search Movies</button>\n          </form>\n          <ul>\n            {searchedMovie.map(({ id, title }) => (\n              <li key={id}>\n                <Link to={`/movies/${id}`}>{title}</Link>\n              </li>\n            ))}\n          </ul>\n        </>\n      )}\n      {params.movieId && (\n        <>\n          <Outlet />\n        </>\n      )}\n    </>\n  );\n};\n\nexport default MoviesPage;\n","import axios from 'axios';\n\nconst API_KEY = 'deb4d54946abdc202a0e5e0e78d6bfcf';\nconst BASE_URL = 'https://api.themoviedb.org/3/';\n\nconst fetchTrending = async setTrendingMovies => {\n  try {\n    const response = await axios.get(\n      `${BASE_URL}trending/movie/day?api_key=${API_KEY}`\n    );\n\n    return setTrendingMovies(response.data.results);\n  } catch (error) {\n    console.error(error);\n  }\n};\n\nconst fetchMovieById = async (movieId, setMovie) => {\n  try {\n    const response = await axios.get(\n      `${BASE_URL}movie/${movieId}?api_key=${API_KEY}&language=en-US`\n    );\n\n    return setMovie(response.data);\n  } catch (error) {\n    console.error(error);\n  }\n};\n\nconst fetchMovieCastById = async (movieId, setCast) => {\n  try {\n    const response = await axios.get(\n      `${BASE_URL}movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`\n    );\n\n    return setCast(response.data.cast);\n  } catch (error) {\n    console.error(error);\n  }\n};\n\nconst fetchMovieReviewsById = async (movieId, setReviews) => {\n  try {\n    const response = await axios.get(\n      `${BASE_URL}movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US`\n    );\n\n    return setReviews(response.data.results);\n  } catch (error) {\n    console.error(error);\n  }\n};\n\nconst fetchMovieByQuery = async (query, setSearchedMovie) => {\n  try {\n    const response = await axios.get(\n      `${BASE_URL}search/movie?api_key=${API_KEY}&query=${query}&page=1&include_adult=false`\n    );\n    return setSearchedMovie(response.data.results);\n  } catch (error) {\n    console.error(error);\n  }\n};\n\nconst api = {\n  fetchTrending,\n  fetchMovieById,\n  fetchMovieCastById,\n  fetchMovieReviewsById,\n  fetchMovieByQuery,\n};\n\nexport default api;\n"],"names":["useState","searchedMovie","setSearchedMovie","useSearchParams","searchQuery","setSearchQuery","query","get","useEffect","api","params","useParams","movieId","onSubmit","e","preventDefault","form","currentTarget","formQuery","elements","value","reset","type","name","map","id","title","to","API_KEY","BASE_URL","fetchTrending","setTrendingMovies","axios","response","data","results","console","error","fetchMovieById","setMovie","fetchMovieCastById","setCast","cast","fetchMovieReviewsById","setReviews","fetchMovieByQuery"],"sourceRoot":""}